name: Terraform CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            terraform/**/*.tf
            terraform/**/*.tfvars

      - name: Set matrix
        id: set-matrix
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          MATRIX="{\"include\":["
          
          # Process each changed file
          while IFS= read -r file; do
            if [[ $file == terraform/* ]]; then
              # Extract module path
              MODULE_PATH=$(echo $file | sed 's/terraform\///' | cut -d'/' -f1)
              if [[ ! " ${MODULES[@]} " =~ " ${MODULE_PATH} " ]]; then
                MODULES+=("$MODULE_PATH")
                MATRIX+="{\"module\":\"$MODULE_PATH\"},"
              fi
            fi
          done <<< "$CHANGED_FILES"
          
          # Remove trailing comma and close JSON
          MATRIX=${MATRIX%,}
          MATRIX+="]}"
          
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  terraform:
    needs: detect-changes
    runs-on: self-hosted
    if: ${{ needs.detect-changes.outputs.matrix != '{"include":[]}' }}
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Create terraform.tfvars
        run: |
          cd terraform
          cat > terraform.tfvars << EOF
          token_secret = "${{ secrets.TOKEN_SECRET }}"
          token_id = "${{ secrets.TOKEN_ID }}"
          api_url = "${{ secrets.API_URL }}"
          ssh_key = "${{ secrets.SSH_KEY }}"
          EOF

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan 